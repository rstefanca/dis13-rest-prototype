akka {
  loglevel = INFO

  logger {
    cz.codingmonkeys.dis13 = DEBUG
  }

  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    serializers {
      // java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "com.google.protobuf.Message" = proto
      "com.trueaccord.scalapb.GeneratedMessage" = proto
    }
  }

  remote {
    log-sent-messages = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "10.152.10.50"
      port = 2550
    }
  }

}

http {
  interface = "0.0.0.0"
  port = 9000
}

database {
  driver = "slick.driver.PostgresDriver$"
  db = {
    initializationFailFast = no
    serviceName = disdb
    connectionPool = HikariCP
    driver = org.postgresql.Driver
    url = "jdbc:postgresql://s-docker/dis13"
    url = ${?PSQL_URL}
    user = "postgres"
    user = ${?PSQL_USER}
    password = "hesloveslo"
    password = ${?PSQL_PASSWORD}
    maxConnections = 50
    numThreads  = 8
  }
}

db-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2

    //2 threads per core
    parallelism-factor = 2.0

    // The max that the dispatcher will create:
    parallelism-max = 8
  }
}

cors.allowed-origin = "*"